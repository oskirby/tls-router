#!/usr/bin/python
import csv

# Parse the CSV file
value2enum = {}
enum2name = {}
with open('tls-parameters-4.csv') as csvfile:
    r = csv.reader(csvfile)

    # Skip the first line
    r.__next__()

    def toUpperName(x):
        if not x.startswith("TLS_"):
            return None
        else:
            return ''.join([c if c.isalnum() else '-' for c in x[4:].upper()])

    def toCamelName(x):
        wordstart = True
        result = ""
        for c in x:
            if not c.isalnum():
                wordstart = True
            elif wordstart:
                result += c.upper()
                wordstart = False
            else:
                result += c.lower()
    
        return result

    for value, name, dtlsok, recommended, reference in r:
        cipherName = toUpperName(name)
        if not cipherName:
            continue

        cipherEnum = "Cipher" + toCamelName(name)

        valHigh, valLow = value.split(',')
        cipherValue = (int(valHigh, 0) << 8) + int(valLow, 0)
        
        value2enum[cipherValue] = cipherEnum
        enum2name[cipherEnum] = cipherName

# Generate the cipher.go file
print(f"""// Generated by {__file__}
package tlsproto

import "fmt"

type CipherSuite uint16
""")

# Print the enum list
print("const (")
for v in value2enum:
    print(f"\t{value2enum[v]} = CipherSuite(0x{v:04x})")
print(")")
print("")

# Print the String method
print("func (cipher *CipherSuite) String() string {")
print("\tswitch *cipher {")
for e in enum2name:
    print(f'\tcase {e}:')
    print(f'\t\treturn "{enum2name[e]}"')
print("\tdefault:")
print('\t\treturn fmt.Sprintf("UNKNOWN-%04x", *cipher)')
print('\t}')
print('}')

    

